[{"/Users/insu/Desktop/coding/coin-renew/src/index.js":"1","/Users/insu/Desktop/coding/coin-renew/src/App.js":"2","/Users/insu/Desktop/coding/coin-renew/src/app.js":"3","/Users/insu/Desktop/coding/coin-renew/src/components/select_coin/select_coin.jsx":"4","/Users/insu/Desktop/coding/coin-renew/src/components/coin_price/coin_price.jsx":"5","/Users/insu/Desktop/coding/coin-renew/src/components/header/header.jsx":"6","/Users/insu/Desktop/coding/coin-renew/src/components/coin_info/coin_info.jsx":"7","/Users/insu/Desktop/coding/coin-renew/src/components/auth_firebase/auth_firebase.jsx":"8","/Users/insu/Desktop/coding/coin-renew/src/service/firebase.js":"9","/Users/insu/Desktop/coding/coin-renew/src/components/login/login.jsx":"10","/Users/insu/Desktop/coding/coin-renew/src/components/register/register.jsx":"11","/Users/insu/Desktop/coding/coin-renew/src/components/board/board.jsx":"12","/Users/insu/Desktop/coding/coin-renew/src/components/board_write/board_write.jsx":"13","/Users/insu/Desktop/coding/coin-renew/src/components/board_view/board_view.jsx":"14","/Users/insu/Desktop/coding/coin-renew/src/components/board_edit/board_edit.jsx":"15","/Users/insu/Desktop/coding/coin-renew/src/components/chatting/chatting.jsx":"16","/Users/insu/Desktop/coding/coin-renew/src/components/search/search.jsx":"17","/Users/insu/Desktop/coding/coin-renew/src/components/search_result/search_result.jsx":"18","/Users/insu/Desktop/coding/coin-renew/src/components/roulette/roulette.jsx":"19"},{"size":220,"mtime":1624969978598,"results":"20","hashOfConfig":"21"},{"size":127,"mtime":1624969754579,"results":"22","hashOfConfig":"21"},{"size":1590,"mtime":1628662599571,"results":"23","hashOfConfig":"21"},{"size":1847,"mtime":1629446594469,"results":"24","hashOfConfig":"21"},{"size":3233,"mtime":1629264683514,"results":"25","hashOfConfig":"21"},{"size":1009,"mtime":1628753768160,"results":"26","hashOfConfig":"21"},{"size":857,"mtime":1629446963652,"results":"27","hashOfConfig":"21"},{"size":1888,"mtime":1627296355860,"results":"28","hashOfConfig":"21"},{"size":762,"mtime":1628230047460,"results":"29","hashOfConfig":"21"},{"size":1867,"mtime":1627886226715,"results":"30","hashOfConfig":"21"},{"size":2146,"mtime":1627902389656,"results":"31","hashOfConfig":"21"},{"size":2726,"mtime":1628750984168,"results":"32","hashOfConfig":"21"},{"size":1678,"mtime":1628230236798,"results":"33","hashOfConfig":"21"},{"size":5081,"mtime":1628597176422,"results":"34","hashOfConfig":"21"},{"size":1558,"mtime":1628152715283,"results":"35","hashOfConfig":"21"},{"size":4377,"mtime":1628598489687,"results":"36","hashOfConfig":"21"},{"size":1184,"mtime":1628149200420,"results":"37","hashOfConfig":"21"},{"size":512,"mtime":1628149241992,"results":"38","hashOfConfig":"21"},{"size":2235,"mtime":1629448839542,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"8v5tei",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"42"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/insu/Desktop/coding/coin-renew/src/index.js",[],["86","87"],"/Users/insu/Desktop/coding/coin-renew/src/App.js",[],"/Users/insu/Desktop/coding/coin-renew/src/app.js",[],"/Users/insu/Desktop/coding/coin-renew/src/components/select_coin/select_coin.jsx",["88"],"import React, { useState } from 'react';\n\nconst SelectCoin = ({coins}) => {\n    \n    const [coin, coinSelect] = useState(null); \n    const [price, getPrice] = useState();\n    const [changeRate, getChangeRate] = useState();\n    const [ready,setReady] = useState(true);\n    const [loading,setLoding] = useState(false);\n    const [result,setResult] = useState(false);\n\n    const coinSelected = () => {\n\n        const setCoin = () => {\n            setTimeout(()=> {\n                setLoding(false);\n                setResult(true);\n                const selected = coins[Math.floor(Math.random() * coins.length)]\n                coinSelect(selected.korean_name);   \n                getMarket(selected.market);   \n            },1000)\n        }\n        if(!coin) {\n            setReady(false);\n            setLoding(true);\n            setCoin();\n            \n        }else {\n            setResult(false);\n            setLoding(true);\n            setCoin();\n        }\n        \n    }\n\n\n    const getMarket = market => {\n        fetch(`https://api.upbit.com/v1/ticker?markets=${market}`)\n        .then(res => res.json())\n        .then(async res => {\n            await res.map(coin => {\n                getPrice(coin.trade_price);\n                getChangeRate((coin.signed_change_rate*100).toFixed(2))\n     \n            });\n            \n        })\n    }\n\n    return(\n        <>\n        <h3>\n        {ready ? <div>ready</div>:null}\n        {loading ? <div>loading</div>:null}\n        {result ? <div>result</div>:null}\n        </h3>\n        <button onClick={coinSelected} >{coin === null ? \"코인랜덤뽑기\":\"다시뽑기\"}</button>\n        {coin ? \n        <div>\n            <div>{coin}</div>\n            <div>{price}원</div>\n            <div>{changeRate}%</div>\n            </div>\n            :null }\n        </>\n    )\n\n\n};\n\nexport default SelectCoin;","/Users/insu/Desktop/coding/coin-renew/src/components/coin_price/coin_price.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/header/header.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/coin_info/coin_info.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/auth_firebase/auth_firebase.jsx",[],["89","90"],"/Users/insu/Desktop/coding/coin-renew/src/service/firebase.js",[],"/Users/insu/Desktop/coding/coin-renew/src/components/login/login.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/register/register.jsx",["91","92","93"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {firebaseAuth, firestore} from '../../service/firebase';\n\nconst Register = () => {\n\n    const [email,setEmail] = useState();\n    const [password,setPassword] = useState();\n    const [nickname,setNickname] = useState();\n    const [err,getErr] = useState(\"\");\n    const history = useHistory();\n\n\n    const onChange = e => {\n        const {target:{name,value}} = e;\n        if(name === 'email') {\n            setEmail(value);\n        }else if (name === 'password') {\n            setPassword(value);\n        }else if (name === 'nickname') {\n            setNickname(value);\n        }\n\n    }\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        try {\n            await firebaseAuth.createUserWithEmailAndPassword(email,password).then(result=> {\n                result.user.updateProfile({displayName:nickname});\n                firestore.collection(\"user\").doc(result.user.uid).set({\n                    email:email,\n                    name: nickname\n                })\n            })\n            history.push('/')\n        } catch(err) {\n            getErr(\"register err\" + err)\n        }\n    }\n\n\n\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input \n            type=\"email\"\n            name=\"email\"\n            placeholder=\"please write your email\"\n            required\n            value={email}\n            onChange={onChange}\n            required\n            />\n\n            <input \n            type=\"password\"\n            name=\"password\"\n            placeholder=\"please write your password\"\n            required\n            value={password || \"\"}\n            onChange={onChange}\n            required\n            />\n\n            <input \n            type=\"text\"\n            name=\"nickname\"\n            placeholder=\"please write your nickname\"\n            required\n            value={nickname}\n            onChange={onChange}\n            required\n\n            />\n            <input type=\"submit\" value=\"sign up\"/>\n        </form>\n        \n        <div>{err}</div>\n        </>\n    )\n}\n\nexport default Register;","/Users/insu/Desktop/coding/coin-renew/src/components/board/board.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/board_write/board_write.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/board_view/board_view.jsx",["94","95"],"import React, { useEffect, useState } from 'react';\nimport {useHistory, useParams } from 'react-router-dom';\nimport firebase from 'firebase/app';\nimport {firestore} from '../../service/firebase';\nimport Chatting from '../chatting/chatting';\n\n\n\n\n\nconst BoardView = ({login,userInfo}) => {\n\n    const userDoc = userInfo;\n    const [title,getTitle] = useState(\"\");\n    const [content,getContent] = useState(\"\");\n    const [user,getUser] =useState({\n        name:'',\n        uid:''\n    });\n    const [time,getTime] = useState({\n        year:'',\n        mon:'',\n        date:''\n    });\n    const [views,getViews] = useState(\"\");\n    const params = useParams();\n    const history = useHistory();\n    \n    const fire = firestore.collection(\"board\").doc(`${params.id}`);\n\n\n    const onEdit = () => {\n        if (login && userInfo.uid === user.uid) {\n            try {\n            history.push(`/board/${params.id}/edit`);\n            } catch(err) {\n                console.log(err);\n            }\n        }else if (login && userInfo.uid !== user.uid) {\n            alert('you are not writer!');\n        }\n        else {\n            alert(\"did you writer?\");\n            history.push('/login');\n        }\n    }\n\n\n    const onDelete = async() => {\n        const del = window.confirm(\"are you sure you want to delete article?\");\n        if(del) {\n            await fire.delete(); \n          if(del) {\n            firestore.collection(\"chatting\").doc(`${params.id}`).collection(\"messages\").get()\n            .then((snap)=> {\n                const size = snap.size\n                for(let i = 0; i < size; i++){\n                    firestore.collection(\"chatting\").doc(`${params.id}`).collection(\"messages\").get()\n                    .then((e)=> {\n                        e.forEach((doc)=> {\n                            firestore.collection(\"chatting\").doc(`${params.id}`).collection(\"messages\").doc(doc.id).delete();\n                        })\n    \n                    })\n                }  \n            })\n            if(del) {\n                await firestore.collection(\"chatting\").doc(`${params.id}`).delete();\n              }\n          }\n          \n    \n           alert('delete!');\n            history.push('/board');\n        }\n    }\n\n\n    const increment = firebase.firestore.FieldValue.increment(1);\n   \n    useEffect(()=> {\n        fire.update({\n            views:increment\n        })\n\n        fire.get().then(result=> {\n            const data = result.data();\n            getTitle(data.title);\n            getContent(data.content);\n            getUser({\n                name:data.name,\n                uid:data.uid\n            })\n            getTime({\n               year:data.year,\n               mon:data.month,\n               date:data.date,\n            })\n            getViews(data.views);\n        })\n    },[])\n\n\n\n    return (\n        <div>\n            <div>\n            <h3>{title}</h3>\n            <h3>{content}</h3>\n            <h3>{time.year}년 {time.mon}월 {time.date}일 </h3>\n            <h4>{user.name}작성 {user.uid}코드</h4>\n            <h4>{views}</h4>\n            </div>\n            <button onClick={onEdit}>edit</button>\n            {login && userInfo.uid === user.uid ? \n            <button onClick={onDelete}>delete</button> : null }\n            <Like login={login} userInfo={userDoc}/>\n            <Chatting userInfo={userDoc} board = {params.id} />\n        </div>\n    )\n}\n\n\nconst Like = ({login,userInfo}) => {\n\n    const [like, setLike] = useState(false);\n    const [likeNum,getLikeNum] = useState(\"\");\n    const params = useParams();\n\n    const fire = firestore.collection(\"board\").doc(`${params.id}`);\n    \n    const clickLike = async(e) => {\n        e.preventDefault();\n        if(login) {\n            if(like === false){ \n                   await fire.collection(\"like\").doc(`${userInfo.uid}`).set({\n                    like:true,\n                    uid:userInfo.uid\n                   })\n                    setLike(true);\n                    }else {\n                    await fire\n                   .collection(\"like\").doc(`${userInfo.uid}`).delete();\n                   setLike(false);\n                    }\n        }else{\n            alert(\"please login\");\n        }\n            \n    }\n\n\n    if (userInfo) {\n        fire.collection(\"like\").get().then(result => {\n            result.forEach(doc => {\n                if(doc.id === userInfo.uid) {\n                    setLike(true);\n                }\n            });\n        })\n    }\n\n\n    useEffect(()=>{\n\n        if(like === false){\n            fire\n            .collection(\"like\").get().then(snap => {\n                let count = snap.size;\n                getLikeNum(count);\n            })\n      }else {\n            fire\n             .collection(\"like\").get().then(snap => {\n            let count = snap.size;\n            getLikeNum(count);\n             })\n      }\n    },[like,login])\n\n\n    return (\n        <div>\n            <button onClick={clickLike}>like</button>\n        <div>{likeNum}</div>\n        {like? <div>true</div>:<div>false</div>}\n        </div>\n    )\n}\n\nexport default BoardView;","/Users/insu/Desktop/coding/coin-renew/src/components/board_edit/board_edit.jsx",["96"],"import React, { useEffect, useState } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport {firestore} from '../../service/firebase';\n\nconst BoardEdit = () => {\n    \n    \n    const [title,getTitle] = useState();\n    const [content,getContent] = useState();\n    const params = useParams();\n    const history = useHistory();\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        await firestore.collection(\"board\").doc(`${params.id}`).update({\n            title:title,\n            content:content,\n            newtime:new Date()\n        })\n        alert('edit suc!')\n        history.push(`/board/${params.id}`)\n    }\n\n    const onChange = e => {\n       const {target:{name,value}} = e;\n       if (name === \"title\") {\n           getTitle(value);\n       }else if (name === \"content\") {\n           getContent(value);\n       }\n\n    }\n\n    useEffect(()=> {\n\n        firestore.collection(\"board\").doc(`${params.id}`).get().then(result => {\n            const data = result.data();\n            getTitle(data.title);\n            getContent(data.content);\n    \n        })\n    },[])\n\n\n    return (\n        <form onSubmit={onSubmit}>\n             <input \n             type=\"text\"\n             name=\"title\"\n             value={title}\n             onChange={onChange}\n             />\n\n            <input \n             type=\"text\"\n             name=\"content\"\n             value={content}\n             onChange={onChange}\n             />\n\n            <input type=\"submit\"/>\n        </form>\n       \n    )\n}\n\nexport default BoardEdit;","/Users/insu/Desktop/coding/coin-renew/src/components/chatting/chatting.jsx",["97","98","99"],"import React, { useEffect, useState } from 'react';\nimport {firestore} from '../../service/firebase';\n\nconst Chatting = ({userInfo, board}) => {\n   \n    const [chat,setChat] = useState(\"\");\n    // const [reChat,setReChat] = useState(\"\")\n    const [comment,getComment] = useState([]);\n    const [chatId,getchatId]=useState();\n    // const [active,setActive] =useState(false);\n\n\n    \n    const onChange = e => {\n        const {target:{name,value}} =e;\n        if(name === \"chat\"){\n        setChat(value);\n        }\n        // else if(name === \"rechat\") {\n        //     setReChat(value);\n        // }\n    }\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n        try {\n            alert(\"comment suc!\");\n            await firestore.collection(\"chatting\").doc(board).collection(\"messages\").add({\n                chat,\n                name:userInfo.displayName,\n                uid:userInfo.uid,\n                time:new Date(),\n                year:new Date().getFullYear(),\n                month:new Date().getMonth()+1,\n                date: new Date().getDate()\n            })\n            setChat(\"\");\n            // setActive(false);\n        }catch(err) {\n            console.log(err);\n        }\n\n        //   try{\n        //     alert(\"recomment suc!\");\n        //     await firestore.collection(\"chatting\").doc(board).collection(\"messages\").doc(chatId).collection(\"rechatting\").add({\n        //         reChat,\n        //         chatUid:chatId,\n        //         name:userInfo.displayName,\n        //         uid:userInfo.uid,\n        //         time:new Date(),\n        //         year:new Date().getFullYear(),\n        //         month:new Date().getMonth()+1,\n        //         date: new Date().getDate()\n        //     })\n        //     setReChat(\"\");\n        //     setActive(false);\n        //     console.log(chatId);\n        //   }catch(err){\n        //       console.log(err)\n        //   }  \n \n        \n    }\n\n    // const onActive = cmtId => {\n    //     setActive(true);\n    //     getchatId(cmtId);\n    // }\n\n\n    const onDelete = async(cmtId,cmtUid) => {\n        if(cmtUid === userInfo.uid){\n        const del = window.confirm(\"are you sure you want comment?\");\n        if(del) {\n            await firestore.collection(\"chatting\").doc(board).collection(\"messages\").doc(cmtId).delete();\n        }\n        }else {\n            alert(\"your not writer!\")\n        }\n    }\n\n    \n   // 여기서 active 설정에 대한 문제 해답을 해야할듯\n   //정보 생성시 해당 uid를 정보에 넣고 update를 통해서 (where)을 사용해 해당 uid값이 있는 값을 출력\n    useEffect(()=> {\n   \n        firestore.collection(\"chatting\").doc(board).collection(\"messages\").orderBy('time')\n        .onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data(),\n            }));\n            getComment(array);\n        })\n        // firestore.collection(\"chatting\").doc(board).collection(\"messages\").doc(chatId).collection(\"rechatting\").orderBy('time')\n        //     .onSnapshot(snapshot => {\n        //     const array = snapshot.docs.map(doc => ({\n        //         id:doc.id,\n        //         ...doc.data(),\n        //     }));\n        //     getReComment(array);\n        // })\n\n    },[])\n\n\n//    const reComments = reComment.map(recmt => \n//    <li key={recmt.id}>\n//        <div>rechat</div>\n//        {recmt.reChat} writer:{recmt.name}\n//        <h3>{recmt.id}</h3>\n//    </li>) \n\n   \n    \n   const comments = comment.map(cmt => \n   <li key ={cmt.id}>\n       {cmt.chat} writer:{cmt.name}\n        <h3>{cmt.id}</h3> \n        <button onClick={()=>onDelete(cmt.id,cmt.uid)}>del</button>\n        {/* <button onClick={()=>onActive(cmt.id)}>rechat</button> */}\n        </li>  \n   )\n   \n    return (\n        <>\n         <ul>\n            {comments}\n        </ul> \n          <form onSubmit ={onSubmit}>\n            <input \n            type=\"text\"\n            name = \"chat\"\n            placeholder=\"please chat\"\n            value={chat}\n            // name ={!active ? \"chat\" : \"rechat\"}\n            // placeholder={!active ? \"please chat\" : \"please rechat\" }\n            // value={!active ? chat : reChat}\n            onChange={onChange}\n            />\n            <input type=\"submit\"/>\n          </form>\n        </>\n        \n      \n    )\n}\n\nexport default Chatting;","/Users/insu/Desktop/coding/coin-renew/src/components/search/search.jsx",["100"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {firestore} from '../../service/firebase';\nimport SearchResult from '../search_result/search_result';\n\n\nconst Search = () => {\n\n\n    const [search,setSearch] = useState(\"\");\n    const [result,getResult] = useState();\n\n\n\n\n    const onSubmit = async(e) => {\n        e.preventDefault();\n        await firestore.collection(\"board\").where(\"title\",\">=\",search).where(\"title\",\"<=\",search + \"\\uf8ff\")\n        .onSnapshot(snapshot => {\n            const array = snapshot.docs.map(doc => ({\n                id:doc.id,\n                ...doc.data()\n            }))\n            getResult(array)\n        })\n\n    }\n        \n\n    const onChange = e => {\n        const {target:{value}} = e;\n        setSearch(value);\n    } \n  \n\n\n\n    return (\n        <>\n        <form onSubmit={onSubmit}>\n            <input \n            type=\"text\" \n            value={search}\n            onChange={onChange}\n            placeholder=\"please search\"\n            required\n            />\n            <input type=\"submit\"/>\n        </form>\n        <SearchResult search ={result}/>\n\n        </>\n    )\n}\n\nexport default Search;","/Users/insu/Desktop/coding/coin-renew/src/components/search_result/search_result.jsx",[],"/Users/insu/Desktop/coding/coin-renew/src/components/roulette/roulette.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":41,"column":32,"nodeType":"107","messageId":"108","endLine":41,"endColumn":34},{"ruleId":"101","replacedBy":"109"},{"ruleId":"103","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":54,"column":13,"nodeType":"113","endLine":54,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":64,"column":13,"nodeType":"113","endLine":64,"endColumn":21},{"ruleId":"111","severity":1,"message":"112","line":74,"column":13,"nodeType":"113","endLine":74,"endColumn":21},{"ruleId":"114","severity":1,"message":"115","line":101,"column":7,"nodeType":"116","endLine":101,"endColumn":9,"suggestions":"117"},{"ruleId":"114","severity":1,"message":"118","line":179,"column":7,"nodeType":"116","endLine":179,"endColumn":19,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"120","line":42,"column":7,"nodeType":"116","endLine":42,"endColumn":9,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":9,"column":12,"nodeType":"124","messageId":"125","endLine":9,"endColumn":18},{"ruleId":"122","severity":1,"message":"126","line":9,"column":19,"nodeType":"124","messageId":"125","endLine":9,"endColumn":28},{"ruleId":"114","severity":1,"message":"127","line":104,"column":7,"nodeType":"116","endLine":104,"endColumn":9,"suggestions":"128"},{"ruleId":"122","severity":1,"message":"129","line":2,"column":10,"nodeType":"124","messageId":"125","endLine":2,"endColumn":20},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["130"],["131"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fire' and 'increment'. Either include them or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'fire'. Either include it or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'params.id'. Either include it or remove the dependency array.",["134"],"no-unused-vars","'chatId' is assigned a value but never used.","Identifier","unusedVar","'getchatId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'board'. Either include it or remove the dependency array.",["135"],"'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [fire, increment]",{"range":"144","text":"145"},"Update the dependencies array to be: [fire, like, login]",{"range":"146","text":"147"},"Update the dependencies array to be: [params.id]",{"range":"148","text":"149"},"Update the dependencies array to be: [board]",{"range":"150","text":"151"},[2808,2810],"[fire, increment]",[4843,4855],"[fire, like, login]",[1110,1112],"[params.id]",[3206,3208],"[board]"]